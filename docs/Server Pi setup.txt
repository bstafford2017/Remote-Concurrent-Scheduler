SERVER PI
____________________________________________________________________
================= Running scripts on Boot ==========================
____________________________________________________________________
[Source] - https://learn.sparkfun.com/tutorials/how-to-run-a-raspberry-pi-program-on-startup/all

Unit File (GUI)
If your program requires graphical components as opposed to a command shell, 
then the following template is recommended for creating a systemd service.

#Create a new .service file in the systemd directory:
sudo nano /lib/systemd/system/server.service

#Enter the following text into the document:
[Unit]
Description=RCS Server

[Service]
Environment=DISPLAY=:0
Environment=XAUTHORITY=/home/pi/.Xauthority
ExecStart=/bin/bash /home/pi/Desktop/remote-concurrent-scheduler/server.sh 
KillMode=process
TimeoutSec=infinity

[Install]
WantedBy=graphical.target

___________________________________________________________________________________
Description can be any text you want to help you remember what this service does.
Under [Service], we specify some environment variables. We want to connect to our 
primary display (this assumes only one display is connected to our Pi), so we set 
DISPLAY to :0, and we tell our application where to find the necessary credentials 
to use the X windows system with XAUTHORITY. ExecStart is the command we want to 
run.

KillMode tells systemd to kill off any processes associated with our 
program if the service fails (or exits), and TimeoutSec=infinity means that we don't 
ever want to stop trying to execute our program.
_____________________________________________________________________________________
 

Save and exit with ctrl + x, followed by y when prompted to save, and then enter.

#Make systemd recognize the service. Rebooting also works.
sudo systemctl daemon-reload

**If the server.service file is modified, this command will have to be re-ran 
or the system must be rebooted.

#Tell systemd to start the service on boot.
sudo systemctl enable server.service

#verify that the program works
sudo reboot

____________________________________________________________________
==================== Disable Screen Sleep ==========================
____________________________________________________________________
[Source] - https://www.bitpi.co/2015/02/14/prevent-raspberry-pi-from-sleeping/

lxde configuration - Xsession blanking
This method should prevent your screen saver from coming on in the GUI.

Open up your lxde autostart file:
sudo nano /etc/xdg/lxsession/LXDE/autostart

If your Pi is newer, the file you'll need to change may be:
sudo nano .config/lxsession/LXDE-pi/autostart

Add these lines:
@xset s noblank
@xset s off
@xset -dpms

_____________________________________________________________________
===================== Download RCS System ===========================
_____________________________________________________________________
[Source] - https://github.com/bstafford2017/remote-concurrent-scheduler

First test to make sure the pi has git and npm are installed.
git --version
npm --version

If either is not then run the respective commands.
sudo apt-get install git -y
sudo apt-get install npm -y

Then move to desktop and download the system repository.

  cd /home/pi/Desktop
  git clone https://github.com/bstafford2017/remote-concurrent-scheduler.git
  cd remote-concurrent-scheduler
  npm install

