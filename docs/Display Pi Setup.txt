DISPLAY PI
____________________________________________________________________
================= Running scripts on Boot ==========================
____________________________________________________________________
[Source] - https://learn.sparkfun.com/tutorials/how-to-run-a-raspberry-pi-program-on-startup/all

Unit File (GUI)
If your program requires graphical components as opposed to a command shell, 
then the following template is recommended for creating a systemd service.

#Create a new .service file in the systemd directory:
sudo nano /lib/systemd/system/server.service

#Enter the following text into the document:
[Unit]
Description=RCS Server

[Service]
Environment=DISPLAY=:0
Environment=XAUTHORITY=/home/pi/.Xauthority
ExecStart=/bin/bash /home/pi/browser.sh 
KillMode=process
TimeoutSec=infinity

[Install]
WantedBy=graphical.target

**This requires the browser.sh from the github repository.
**You can download this single file using the following commands.

cd /home/pi
wget https://raw.githubusercontent.com/bstafford2017/remote-concurrent-scheduler/master/browser.sh

___________________________________________________________________________________
Description can be any text you want to help you remember what this service does.
Under [Service], we specify some environment variables. We want to connect to our 
primary display (this assumes only one display is connected to our Pi), so we set 
DISPLAY to :0, and we tell our application where to find the necessary credentials 
to use the X windows system with XAUTHORITY. ExecStart is the command we want to 
run.

KillMode tells systemd to kill off any processes associated with our 
program if the service fails (or exits), and TimeoutSec=infinity means that we don't 
ever want to stop trying to execute our program.
_____________________________________________________________________________________
 

Save and exit with ctrl + x, followed by y when prompted to save, and then enter.

#Make systemd recognize the service. Rebooting also works.
sudo systemctl daemon-reload

**If the server.service file is modified, this command will have to be re-ran 
or the system must be rebooted.

#Tell systemd to start the service on boot.
sudo systemctl enable server.service

#verify that the program works
sudo reboot

____________________________________________________________________
==================== Disable Screen Sleep ==========================
____________________________________________________________________
[Source] - https://www.bitpi.co/2015/02/14/prevent-raspberry-pi-from-sleeping/

lxde configuration - Xsession blanking
This method should prevent your screen saver from coming on in the GUI.

Open up your lxde autostart file:
sudo nano /etc/xdg/lxsession/LXDE/autostart

If your Pi is newer, the file you'll need to change may be:
sudo nano .config/lxsession/LXDE-pi/autostart

Add these lines:
@xset s noblank
@xset s off
@xset -dpms
____________________________________________________________________
====================== Hide Cursor =================================
____________________________________________________________________
Install unclutter and set it to idle 1:

Run this line to hide the mouse pointer after ever 1 idle seconds.

sudo apt-get install unclutter

To make this a permantent effect add it to the autostart file:
sudo nano ~/.config/lxsession/LXDE-pi/autostart
and add
@unclutter -idle 1
___________________________________________________________________
================== Connect to Hidden Network ======================
___________________________________________________________________
[Source] - https://raspi.tv/2017/how-to-auto-connect-your-raspberry-pi-to-a-hidden-ssid-wifi-network

Edit the wpa_supplicant.conf file with the following command.

sudo nano /etc/wpa_supplicant/wpa_supplicant.conf

Replace it with the following lines.

ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="rcs"
	scan_ssid=1
	psk="cs493rcs2019"
	key_mgmt=WPA-PSK
}

The sudo reboot and the Display Pi should connect to the Server Pi. If this does not work, double check
the .conf to make sure the changes saved. If not re-enter the lines and reboot the system a second time.

**The line 'scan_ssid=1' is required to connect to a hidden network.
